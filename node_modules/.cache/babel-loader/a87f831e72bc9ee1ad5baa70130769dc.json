{"ast":null,"code":"const {\n  dirname\n} = require('path');\n\nconst findMade = (opts, parent, path = undefined) => {\n  // we never want the 'made' return value to be a root directory\n  if (path === parent) return Promise.resolve();\n  return opts.statAsync(parent).then(st => st.isDirectory() ? path : undefined, // will fail later\n  er => er.code === 'ENOENT' ? findMade(opts, dirname(parent), parent) : undefined);\n};\n\nconst findMadeSync = (opts, parent, path = undefined) => {\n  if (path === parent) return undefined;\n\n  try {\n    return opts.statSync(parent).isDirectory() ? path : undefined;\n  } catch (er) {\n    return er.code === 'ENOENT' ? findMadeSync(opts, dirname(parent), parent) : undefined;\n  }\n};\n\nmodule.exports = {\n  findMade,\n  findMadeSync\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/loginApp/node_modules/tar/node_modules/mkdirp/lib/find-made.js"],"names":["dirname","require","findMade","opts","parent","path","undefined","Promise","resolve","statAsync","then","st","isDirectory","er","code","findMadeSync","statSync","module","exports"],"mappings":"AAAA,MAAM;AAACA,EAAAA;AAAD,IAAYC,OAAO,CAAC,MAAD,CAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,IAAI,GAAGC,SAAtB,KAAoC;AACnD;AACA,MAAID,IAAI,KAAKD,MAAb,EACE,OAAOG,OAAO,CAACC,OAAR,EAAP;AAEF,SAAOL,IAAI,CAACM,SAAL,CAAeL,MAAf,EAAuBM,IAAvB,CACLC,EAAE,IAAIA,EAAE,CAACC,WAAH,KAAmBP,IAAnB,GAA0BC,SAD3B,EACsC;AAC3CO,EAAAA,EAAE,IAAIA,EAAE,CAACC,IAAH,KAAY,QAAZ,GACFZ,QAAQ,CAACC,IAAD,EAAOH,OAAO,CAACI,MAAD,CAAd,EAAwBA,MAAxB,CADN,GAEFE,SAJC,CAAP;AAMD,CAXD;;AAaA,MAAMS,YAAY,GAAG,CAACZ,IAAD,EAAOC,MAAP,EAAeC,IAAI,GAAGC,SAAtB,KAAoC;AACvD,MAAID,IAAI,KAAKD,MAAb,EACE,OAAOE,SAAP;;AAEF,MAAI;AACF,WAAOH,IAAI,CAACa,QAAL,CAAcZ,MAAd,EAAsBQ,WAAtB,KAAsCP,IAAtC,GAA6CC,SAApD;AACD,GAFD,CAEE,OAAOO,EAAP,EAAW;AACX,WAAOA,EAAE,CAACC,IAAH,KAAY,QAAZ,GACHC,YAAY,CAACZ,IAAD,EAAOH,OAAO,CAACI,MAAD,CAAd,EAAwBA,MAAxB,CADT,GAEHE,SAFJ;AAGD;AACF,CAXD;;AAaAW,MAAM,CAACC,OAAP,GAAiB;AAAChB,EAAAA,QAAD;AAAWa,EAAAA;AAAX,CAAjB","sourcesContent":["const {dirname} = require('path')\r\n\r\nconst findMade = (opts, parent, path = undefined) => {\r\n  // we never want the 'made' return value to be a root directory\r\n  if (path === parent)\r\n    return Promise.resolve()\r\n\r\n  return opts.statAsync(parent).then(\r\n    st => st.isDirectory() ? path : undefined, // will fail later\r\n    er => er.code === 'ENOENT'\r\n      ? findMade(opts, dirname(parent), parent)\r\n      : undefined\r\n  )\r\n}\r\n\r\nconst findMadeSync = (opts, parent, path = undefined) => {\r\n  if (path === parent)\r\n    return undefined\r\n\r\n  try {\r\n    return opts.statSync(parent).isDirectory() ? path : undefined\r\n  } catch (er) {\r\n    return er.code === 'ENOENT'\r\n      ? findMadeSync(opts, dirname(parent), parent)\r\n      : undefined\r\n  }\r\n}\r\n\r\nmodule.exports = {findMade, findMadeSync}\r\n"]},"metadata":{},"sourceType":"script"}